#!/bin/bash
#SBATCH --job-name=@name
#SBATCH -o output/o.%j
#SBATCH -e error/e.%j
#SBATCH --partition=standard
#SBATCH --nodes=4
#SBATCH --ntasks-per-node=128
#SBATCH --time=24:00:00
#SBATCH --qos=standard
#SBATCH --account=n02-LDNDTP1
#SBATCH --hint=nomultithread
#SBATCH --distribution=block:block

# set options
export FI_MR_CACHE_MAX_COUNT=0		# Disable memory registration cache
export CH_OUTPUT_INTERVAL=0			# Reduces the number of pout files to 1

# set paths
export WORK=/mnt/lustre/a2fs-work2/work/n02/shared/jonnieb/
export BISEXEC=$WORK/Bisicles/ocean_conn/code/exec2D/driver2d.Linux.64.CC.ftn.OPT.MPI.PETSC.GNU.ex
export BISINPT=inputs.inversion.@name
export JOB=job.transient.@name

module load cray-python	

source $WORK/libs/utils.sh

start=$(date +%s)
echo Start time is `date`


# make directories
cd $SLURM_SUBMIT_DIR
mkdir -p plot chk ctrl hist pout output error


# update pout
echo "" >> $BISINPT
echo "main.poutBaseName = pout/pout.snapshot.$SLURM_JOB_ID" >> $BISINPT


# run BISICLES
echo "running BISICLES..."
srun $BISEXEC $BISINPT
echo "BISICLES done"

# tidy up
ls ctrl | head -n 1 | xargs -I {} mv ctrl/{} hist
ls ctrl | tail -n 1 | xargs -I {} mv ctrl/{} hist
rm ctrl/*

# prepare transient inversion
#echo "" >> $BISINPT
#echo "# transient inversion" >> $BISINPT
#echo "amr.evolve_thickness = true" >> $BISINPT
#echo "control.CGmaxIter = 16" >> $BISINPT

# queue tansient run
#if [ ! -e core ]; then
#	sbatch $JOB
#fi

end=$(date +%s)
echo End time is `date`
echo Time elapsed: $(time_elapsed $start $end)


